# Generated by Django 4.1 on 2022-10-29 10:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CalorieGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goal', models.IntegerField()),
                ('protein_percentage', models.IntegerField()),
                ('carbs_percentage', models.IntegerField()),
                ('fat_percentage', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='DailySumup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('kcal', models.IntegerField()),
                ('protein', models.IntegerField()),
                ('carbs', models.IntegerField()),
                ('fat', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('kcal', models.IntegerField()),
                ('protein', models.IntegerField()),
                ('carbs', models.IntegerField()),
                ('fat', models.IntegerField()),
                ('unit', models.CharField(choices=[('g', 'g'), ('ml', 'ml')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ProductSumup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(default=100)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trackerApp.product')),
                ('sumup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trackerApp.dailysumup')),
            ],
        ),
        migrations.CreateModel(
            name='MealSumup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(default=1)),
                ('meal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trackerApp.meal')),
                ('sumup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trackerApp.dailysumup')),
            ],
        ),
        migrations.CreateModel(
            name='MealProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(default=100)),
                ('meal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trackerApp.meal')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trackerApp.product')),
            ],
        ),
        migrations.AddField(
            model_name='meal',
            name='ingredients',
            field=models.ManyToManyField(through='trackerApp.MealProduct', to='trackerApp.product'),
        ),
        migrations.AddField(
            model_name='dailysumup',
            name='meals',
            field=models.ManyToManyField(through='trackerApp.MealSumup', to='trackerApp.meal'),
        ),
        migrations.AddField(
            model_name='dailysumup',
            name='products',
            field=models.ManyToManyField(through='trackerApp.ProductSumup', to='trackerApp.product'),
        ),
    ]
